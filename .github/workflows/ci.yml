name: CI

on:
  push:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: test - ${{ matrix.target }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            runner: ubuntu-22.04
            os: ubuntu
            cross: false
          - target: aarch64-unknown-linux-gnu
            runner: ubuntu-22.04-arm
            os: ubuntu
            cross: false
          - target: x86_64-unknown-linux-musl
            runner: ubuntu-22.04
            os: ubuntu
            cross: false
          - target: aarch64-unknown-linux-musl
            runner: ubuntu-22.04-arm
            os: ubuntu
            cross: false
          - target: aarch64-apple-darwin
            runner: macos-latest
            os: macos
            cross: false
    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4
      - name: update apt cache on linux
        if: matrix.os == 'ubuntu'
        run: sudo apt-get update
      - name: install protoc linux
        if: matrix.os == 'ubuntu'
        run: sudo apt-get install -y protobuf-compiler
      - name: install protoc macos
        if: matrix.os == 'macos'
        run: brew install protobuf
      - name: install deps for musl aarch64 static build
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: |
          sudo apt-get install -y musl-dev libzstd-dev clang
          sudo ln -s /usr/bin/aarch64-linux-gnu-g++ /usr/bin/aarch64-linux-musl-g++
      - name: install deps for musl x86_64 static build
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get install -y musl-dev libzstd-dev clang
          sudo ln -s /usr/bin/x86_64-linux-gnu-g++ /usr/bin/x86_64-linux-musl-g++
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          rustflags: ""
      - name: install cross
        if: matrix.cross == true
        run: |
          cargo install cross
          echo "CARGO_BIN=cross" >> $GITHUB_ENV
      - name: set CARGO bin
        if: matrix.cross == false
        run: |
          echo "CARGO_BIN=cargo" >> $GITHUB_ENV
      - name: run test
        run: |
          $CARGO_BIN test --target ${{ matrix.target }} --verbose
      - name: run test processor-sdk
        if: contains(matrix.target, 'musl') == false
        run: $CARGO_BIN test --manifest-path ./rotel_python_processor_sdk/Cargo.toml --target ${{ matrix.target }}

  # Check formatting with rustfmt
  formatting:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Ensure rustfmt is installed and setup problem matcher
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
          rustflags: ""
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1
